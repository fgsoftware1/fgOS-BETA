#ENV VARIABLES
GPPPARAMS = -m32 -g -c -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -fno-stack-protector -std=c++11 -Dsnprintf=snprintf -D_WIN32_WINNT=0x0501 -D_MSC_VER=1600
GCCPARAMS = -m32 -g -Iinclude -nostdlib -Wno-write-strings -std=c11 -Dsnprintf=snprintf -D_WIN32_WINNT=0x0501 -D_MSC_VER=1600
ARPARAMS = -t
ASPARAMS = --32
LDPARAMS = -T
CCPARAMS = -std=c99 -lm -Wall -Wextra -pedantic -O3 -Wfloat-equal -g

#RULES
#compilers
rule compile-cpp
 command = g++ $GPPPARAMS $in -o $out
rule compile-h
  command = g++ $GCCPARAMS $in -o $out
rule compile-asm
 command = as $ASPARAMS -o $out -c $in
#linkers
rule link
 command = ld -o $out $in $LDPARAMS ./src/linker.ld
rule cc
  command = cc $CCPARAMS -c $in -o $out -I .
#builders
rule iso
  command = grub-mkrescue $in -o $out
rule lib
  command = ar $ARPARAMS -o $out -c $in

#OBJECTS
#gcc
build ./bin/kernel.o: compile-cpp ./src/kernel.cpp
build ./bin/gdt.o: compile-cpp ./src/gdt.cpp
#as
build ./bin/loader.o: compile-asm ./src/loader.s
#clang
build ./bin/types.h.o: compile-h ./src/include/types.h
build ./bin/gdt.h.o: compile-h ./src/include/gdt.h
#LIBS
build ./src/libs/types.lib: lib ./bin/types.h.o
build ./src/libs/gdt.lib: lib ./bin/gdt.h.o
#LINKS
#ld
build ./bin/libs.o: cc ./src/libs/types.lib ./src/libs/gdt.lib
build ./build/boot/fgOS.bin: link ./bin/loader.o ./bin/kernel.o ./bin/gdt.o
#BUILDS
#iso
build ./build/fgOS.iso: iso ./build/boot/fgOS.bin
